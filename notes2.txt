- you need to add functions vlidation so that "|" is accounted for. You need
to add this to write function as well. DONE
- create index page
- header and footer include files.
- css file - get rid of bootstrap.
- ONLY write username if username not already on file - amend function DONE
- ONLY write email if email not already on file - amend function DONE
- sought out sessions - only admin session should be able to access add user - create seperate php file with if statement that checks
session status.
- record logged out status using GET

- Go through all data, making sure it is all clean and escaped.

- Password ERRORS only ADDED if usernmame is VALID (DONE (check))

- revist forms - add if statements at beginning then add variable to forms DONE (double check)
- use v small javascript function to toggle password visibility (small feature that would be useful for the user)
- add confirm password option to add user




PROBLEMS
- how best to save passwords? save password for admin and
username in the same place? // Solution? Hard code admin username/password add diferent functions for validation for admin and
ordinary users.
function for all form fields
- how to check passwords /// Solution? you can use the same form functions EXCEPT THE EXPLICT VALIDATION functions
these need to be separate functions.
- how best to add some level of security to text files? Store not on the same root directory as website. If on the same directory as website
the user can simply navigate to the text files.
- how to record logged out status on index page? USE GET superglobal on logout BUTTON
something like logout.php?message=loggedout.
- Generally how to manage login/logout - where to direct user. You don't want to see form again. Not relevant.
- How to handle duplicates? Turns out you need another error message. Normal error message won't suffice - messages won't make sense

if (isset(message)){
display message
}
else{
do nothing
}

use regenerate sessionid for escalation in access level.
